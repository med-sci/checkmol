apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: production
  labels:
    app: mongo
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:6.0
          ports:
            - containerPort: 27017
          envFrom:
            - configMapRef:
                name: mongo-config
            - secretRef:
                name: mongo-secret
          volumeMounts:
            - name: mongo-volume
              mountPath: /data/db
      volumes:
        - name: mongo-volume
          persistentVolumeClaim:
            claimName: mongo-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
  namespace: production
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      app: mongo

---
apiVersion: v1
kind: Service
metadata:
  name: mongo-svc
  namespace: production
spec:
  selector:
    app: mongo
  ports:
    - port: 27017
      targetPort: 27017
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express
  namespace: production
  labels:
    app: mongo-express
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: mongo-express
  template:
    metadata:
      labels:
        app: mongo-express
    spec:
      containers:
        - name: mongo-express
          image: mongo-express:1.0.0-alpha.4
          ports:
            - containerPort: 8081
          envFrom:
            - configMapRef:
                name: mongo-express-config
            - secretRef:
                name: mongo-express-secret

---
apiVersion: v1
kind: Service
metadata:
  name: mongo-express-svc
  namespace: production
spec:
  selector:
    app: mongo-express
  ports:
    - port: 8081
      targetPort: 8081
      protocol: TCP